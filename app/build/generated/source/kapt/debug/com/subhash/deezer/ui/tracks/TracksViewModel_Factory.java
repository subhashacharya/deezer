// Generated by Dagger (https://dagger.dev).
package com.subhash.deezer.ui.tracks;

import com.subhash.deezer.repository.network.NetworkRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TracksViewModel_Factory implements Factory<TracksViewModel> {
  private final Provider<NetworkRepository> networkRepositoryProvider;

  public TracksViewModel_Factory(Provider<NetworkRepository> networkRepositoryProvider) {
    this.networkRepositoryProvider = networkRepositoryProvider;
  }

  @Override
  public TracksViewModel get() {
    return new TracksViewModel(networkRepositoryProvider.get());
  }

  public static TracksViewModel_Factory create(
      Provider<NetworkRepository> networkRepositoryProvider) {
    return new TracksViewModel_Factory(networkRepositoryProvider);
  }

  public static TracksViewModel newInstance(NetworkRepository networkRepository) {
    return new TracksViewModel(networkRepository);
  }
}
