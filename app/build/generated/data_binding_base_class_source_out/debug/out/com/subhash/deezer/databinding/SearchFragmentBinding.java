// Generated by data binding compiler. Do not edit!
package com.subhash.deezer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.subhash.deezer.R;
import com.subhash.deezer.ui.search.SearchEventsListener;
import com.subhash.deezer.ui.search.SearchViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class SearchFragmentBinding extends ViewDataBinding {
  @NonNull
  public final ImageView btnClear;

  @NonNull
  public final CardView searchBox;

  @NonNull
  public final RecyclerView searchResults;

  @Bindable
  protected SearchViewModel mViewModel;

  @Bindable
  protected SearchEventsListener mListener;

  protected SearchFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView btnClear, CardView searchBox, RecyclerView searchResults) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnClear = btnClear;
    this.searchBox = searchBox;
    this.searchResults = searchResults;
  }

  public abstract void setViewModel(@Nullable SearchViewModel viewModel);

  @Nullable
  public SearchViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setListener(@Nullable SearchEventsListener listener);

  @Nullable
  public SearchEventsListener getListener() {
    return mListener;
  }

  @NonNull
  public static SearchFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.search_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SearchFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SearchFragmentBinding>inflateInternal(inflater, R.layout.search_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static SearchFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.search_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SearchFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SearchFragmentBinding>inflateInternal(inflater, R.layout.search_fragment, null, false, component);
  }

  public static SearchFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SearchFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (SearchFragmentBinding)bind(component, view, R.layout.search_fragment);
  }
}
