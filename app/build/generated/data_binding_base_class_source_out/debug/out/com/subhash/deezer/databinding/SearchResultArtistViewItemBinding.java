// Generated by data binding compiler. Do not edit!
package com.subhash.deezer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.subhash.deezer.R;
import com.subhash.deezer.ui.search.ArtistItem;
import com.subhash.deezer.ui.search.SearchEventsListener;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class SearchResultArtistViewItemBinding extends ViewDataBinding {
  @NonNull
  public final ImageView artistIcon;

  @NonNull
  public final TextView artistName;

  @Bindable
  protected ArtistItem mItem;

  @Bindable
  protected SearchEventsListener mListener;

  protected SearchResultArtistViewItemBinding(Object _bindingComponent, View _root,
      int _localFieldCount, ImageView artistIcon, TextView artistName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.artistIcon = artistIcon;
    this.artistName = artistName;
  }

  public abstract void setItem(@Nullable ArtistItem item);

  @Nullable
  public ArtistItem getItem() {
    return mItem;
  }

  public abstract void setListener(@Nullable SearchEventsListener listener);

  @Nullable
  public SearchEventsListener getListener() {
    return mListener;
  }

  @NonNull
  public static SearchResultArtistViewItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.search_result_artist_view_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SearchResultArtistViewItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SearchResultArtistViewItemBinding>inflateInternal(inflater, R.layout.search_result_artist_view_item, root, attachToRoot, component);
  }

  @NonNull
  public static SearchResultArtistViewItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.search_result_artist_view_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SearchResultArtistViewItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SearchResultArtistViewItemBinding>inflateInternal(inflater, R.layout.search_result_artist_view_item, null, false, component);
  }

  public static SearchResultArtistViewItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SearchResultArtistViewItemBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (SearchResultArtistViewItemBinding)bind(component, view, R.layout.search_result_artist_view_item);
  }
}
